[build-system]
requires = ["scikit-build-core", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "cuda_available"
dynamic = ["version"]
description = "A package for checking available CUDA device information"
readme = "README.md"
authors = [{ name = "Alex", email = "AlexZhu2001@stu.xupt.edu.cn" }]
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.scikit-build]
cmake.minimum-version = "3.15"
wheel.expand-macos-universal-tags = true
experimental = true

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "/tmp/VERSION"
regex = "(?P<value>.+)"

[tool.cibuildwheel]
build-verbosity = 1
archs = ["auto64"]

[tool.cibuildwheel.linux]
before-all = "python3.9 ./scripts/install_cuda_manylinux.py&&source /root/.bashrc&&python3.9 ./scripts/make_version.py&&nvcc -V"
environment-pass = ["CUDA_VERSION"]

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
ignore = [
    "PLR09",   # Too many X
    "PLR2004", # Magic comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
